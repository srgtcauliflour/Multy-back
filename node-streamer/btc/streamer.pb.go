// Code generated by protoc-gen-go. DO NOT EDIT.
// source: streamer.proto

package btc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BTCTransaction struct {
	UserID               string                         `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	TxID                 string                         `protobuf:"bytes,2,opt,name=txID" json:"txID,omitempty"`
	TxHash               string                         `protobuf:"bytes,3,opt,name=txHash" json:"txHash,omitempty"`
	TxOutScript          string                         `protobuf:"bytes,4,opt,name=txOutScript" json:"txOutScript,omitempty"`
	TxAddress            []string                       `protobuf:"bytes,5,rep,name=txAddress" json:"txAddress,omitempty"`
	TxStatus             int32                          `protobuf:"varint,6,opt,name=txStatus" json:"txStatus,omitempty"`
	TxOutAmount          int64                          `protobuf:"varint,7,opt,name=txOutAmount" json:"txOutAmount,omitempty"`
	BlockTime            int64                          `protobuf:"varint,8,opt,name=blockTime" json:"blockTime,omitempty"`
	BlockHeight          int64                          `protobuf:"varint,9,opt,name=blockHeight" json:"blockHeight,omitempty"`
	Confirmations        int32                          `protobuf:"varint,10,opt,name=confirmations" json:"confirmations,omitempty"`
	TxFee                int64                          `protobuf:"varint,11,opt,name=txFee" json:"txFee,omitempty"`
	MempoolTime          int64                          `protobuf:"varint,12,opt,name=mempoolTime" json:"mempoolTime,omitempty"`
	TxInputs             []*BTCTransaction_AddresAmount `protobuf:"bytes,13,rep,name=txInputs" json:"txInputs,omitempty"`
	TxOutputs            []*BTCTransaction_AddresAmount `protobuf:"bytes,14,rep,name=TxOutputs" json:"TxOutputs,omitempty"`
	WalletsInput         []*BTCTransaction_WalletForTx  `protobuf:"bytes,15,rep,name=WalletsInput" json:"WalletsInput,omitempty"`
	WalletsOutput        []*BTCTransaction_WalletForTx  `protobuf:"bytes,16,rep,name=WalletsOutput" json:"WalletsOutput,omitempty"`
	Resync               bool                           `protobuf:"varint,17,opt,name=resync" json:"resync,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *BTCTransaction) Reset()         { *m = BTCTransaction{} }
func (m *BTCTransaction) String() string { return proto.CompactTextString(m) }
func (*BTCTransaction) ProtoMessage()    {}
func (*BTCTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{0}
}
func (m *BTCTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BTCTransaction.Unmarshal(m, b)
}
func (m *BTCTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BTCTransaction.Marshal(b, m, deterministic)
}
func (dst *BTCTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BTCTransaction.Merge(dst, src)
}
func (m *BTCTransaction) XXX_Size() int {
	return xxx_messageInfo_BTCTransaction.Size(m)
}
func (m *BTCTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_BTCTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_BTCTransaction proto.InternalMessageInfo

func (m *BTCTransaction) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *BTCTransaction) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *BTCTransaction) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *BTCTransaction) GetTxOutScript() string {
	if m != nil {
		return m.TxOutScript
	}
	return ""
}

func (m *BTCTransaction) GetTxAddress() []string {
	if m != nil {
		return m.TxAddress
	}
	return nil
}

func (m *BTCTransaction) GetTxStatus() int32 {
	if m != nil {
		return m.TxStatus
	}
	return 0
}

func (m *BTCTransaction) GetTxOutAmount() int64 {
	if m != nil {
		return m.TxOutAmount
	}
	return 0
}

func (m *BTCTransaction) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *BTCTransaction) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *BTCTransaction) GetConfirmations() int32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *BTCTransaction) GetTxFee() int64 {
	if m != nil {
		return m.TxFee
	}
	return 0
}

func (m *BTCTransaction) GetMempoolTime() int64 {
	if m != nil {
		return m.MempoolTime
	}
	return 0
}

func (m *BTCTransaction) GetTxInputs() []*BTCTransaction_AddresAmount {
	if m != nil {
		return m.TxInputs
	}
	return nil
}

func (m *BTCTransaction) GetTxOutputs() []*BTCTransaction_AddresAmount {
	if m != nil {
		return m.TxOutputs
	}
	return nil
}

func (m *BTCTransaction) GetWalletsInput() []*BTCTransaction_WalletForTx {
	if m != nil {
		return m.WalletsInput
	}
	return nil
}

func (m *BTCTransaction) GetWalletsOutput() []*BTCTransaction_WalletForTx {
	if m != nil {
		return m.WalletsOutput
	}
	return nil
}

func (m *BTCTransaction) GetResync() bool {
	if m != nil {
		return m.Resync
	}
	return false
}

type BTCTransaction_AddresAmount struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BTCTransaction_AddresAmount) Reset()         { *m = BTCTransaction_AddresAmount{} }
func (m *BTCTransaction_AddresAmount) String() string { return proto.CompactTextString(m) }
func (*BTCTransaction_AddresAmount) ProtoMessage()    {}
func (*BTCTransaction_AddresAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{0, 0}
}
func (m *BTCTransaction_AddresAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BTCTransaction_AddresAmount.Unmarshal(m, b)
}
func (m *BTCTransaction_AddresAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BTCTransaction_AddresAmount.Marshal(b, m, deterministic)
}
func (dst *BTCTransaction_AddresAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BTCTransaction_AddresAmount.Merge(dst, src)
}
func (m *BTCTransaction_AddresAmount) XXX_Size() int {
	return xxx_messageInfo_BTCTransaction_AddresAmount.Size(m)
}
func (m *BTCTransaction_AddresAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_BTCTransaction_AddresAmount.DiscardUnknown(m)
}

var xxx_messageInfo_BTCTransaction_AddresAmount proto.InternalMessageInfo

func (m *BTCTransaction_AddresAmount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BTCTransaction_AddresAmount) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type BTCTransaction_WalletForTx struct {
	Userid               string   `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	TxOutIndex           int32    `protobuf:"varint,3,opt,name=txOutIndex" json:"txOutIndex,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BTCTransaction_WalletForTx) Reset()         { *m = BTCTransaction_WalletForTx{} }
func (m *BTCTransaction_WalletForTx) String() string { return proto.CompactTextString(m) }
func (*BTCTransaction_WalletForTx) ProtoMessage()    {}
func (*BTCTransaction_WalletForTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{0, 1}
}
func (m *BTCTransaction_WalletForTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BTCTransaction_WalletForTx.Unmarshal(m, b)
}
func (m *BTCTransaction_WalletForTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BTCTransaction_WalletForTx.Marshal(b, m, deterministic)
}
func (dst *BTCTransaction_WalletForTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BTCTransaction_WalletForTx.Merge(dst, src)
}
func (m *BTCTransaction_WalletForTx) XXX_Size() int {
	return xxx_messageInfo_BTCTransaction_WalletForTx.Size(m)
}
func (m *BTCTransaction_WalletForTx) XXX_DiscardUnknown() {
	xxx_messageInfo_BTCTransaction_WalletForTx.DiscardUnknown(m)
}

var xxx_messageInfo_BTCTransaction_WalletForTx proto.InternalMessageInfo

func (m *BTCTransaction_WalletForTx) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *BTCTransaction_WalletForTx) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BTCTransaction_WalletForTx) GetTxOutIndex() int32 {
	if m != nil {
		return m.TxOutIndex
	}
	return 0
}

func (m *BTCTransaction_WalletForTx) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type AddSpOut struct {
	TxID                 string   `protobuf:"bytes,1,opt,name=txID" json:"txID,omitempty"`
	TxOutID              int32    `protobuf:"varint,2,opt,name=txOutID" json:"txOutID,omitempty"`
	TxOutAmount          int64    `protobuf:"varint,3,opt,name=txOutAmount" json:"txOutAmount,omitempty"`
	TxOutScript          string   `protobuf:"bytes,4,opt,name=txOutScript" json:"txOutScript,omitempty"`
	Address              string   `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	UserID               string   `protobuf:"bytes,6,opt,name=userID" json:"userID,omitempty"`
	TxStatus             int32    `protobuf:"varint,7,opt,name=txStatus" json:"txStatus,omitempty"`
	WalletIndex          int32    `protobuf:"varint,8,opt,name=walletIndex" json:"walletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,9,opt,name=addressIndex" json:"addressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSpOut) Reset()         { *m = AddSpOut{} }
func (m *AddSpOut) String() string { return proto.CompactTextString(m) }
func (*AddSpOut) ProtoMessage()    {}
func (*AddSpOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{1}
}
func (m *AddSpOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSpOut.Unmarshal(m, b)
}
func (m *AddSpOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSpOut.Marshal(b, m, deterministic)
}
func (dst *AddSpOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSpOut.Merge(dst, src)
}
func (m *AddSpOut) XXX_Size() int {
	return xxx_messageInfo_AddSpOut.Size(m)
}
func (m *AddSpOut) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSpOut.DiscardUnknown(m)
}

var xxx_messageInfo_AddSpOut proto.InternalMessageInfo

func (m *AddSpOut) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *AddSpOut) GetTxOutID() int32 {
	if m != nil {
		return m.TxOutID
	}
	return 0
}

func (m *AddSpOut) GetTxOutAmount() int64 {
	if m != nil {
		return m.TxOutAmount
	}
	return 0
}

func (m *AddSpOut) GetTxOutScript() string {
	if m != nil {
		return m.TxOutScript
	}
	return ""
}

func (m *AddSpOut) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddSpOut) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddSpOut) GetTxStatus() int32 {
	if m != nil {
		return m.TxStatus
	}
	return 0
}

func (m *AddSpOut) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *AddSpOut) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type Resync struct {
	Txs                  []*BTCTransaction `protobuf:"bytes,1,rep,name=Txs" json:"Txs,omitempty"`
	SpOuts               []*AddSpOut       `protobuf:"bytes,2,rep,name=SpOuts" json:"SpOuts,omitempty"`
	SpOutDelete          []*ReqDeleteSpOut `protobuf:"bytes,3,rep,name=SpOutDelete" json:"SpOutDelete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Resync) Reset()         { *m = Resync{} }
func (m *Resync) String() string { return proto.CompactTextString(m) }
func (*Resync) ProtoMessage()    {}
func (*Resync) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{2}
}
func (m *Resync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resync.Unmarshal(m, b)
}
func (m *Resync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resync.Marshal(b, m, deterministic)
}
func (dst *Resync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resync.Merge(dst, src)
}
func (m *Resync) XXX_Size() int {
	return xxx_messageInfo_Resync.Size(m)
}
func (m *Resync) XXX_DiscardUnknown() {
	xxx_messageInfo_Resync.DiscardUnknown(m)
}

var xxx_messageInfo_Resync proto.InternalMessageInfo

func (m *Resync) GetTxs() []*BTCTransaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *Resync) GetSpOuts() []*AddSpOut {
	if m != nil {
		return m.SpOuts
	}
	return nil
}

func (m *Resync) GetSpOutDelete() []*ReqDeleteSpOut {
	if m != nil {
		return m.SpOutDelete
	}
	return nil
}

type BlockHeight struct {
	Height               int64    `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeight) Reset()         { *m = BlockHeight{} }
func (m *BlockHeight) String() string { return proto.CompactTextString(m) }
func (*BlockHeight) ProtoMessage()    {}
func (*BlockHeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{3}
}
func (m *BlockHeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeight.Unmarshal(m, b)
}
func (m *BlockHeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeight.Marshal(b, m, deterministic)
}
func (dst *BlockHeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeight.Merge(dst, src)
}
func (m *BlockHeight) XXX_Size() int {
	return xxx_messageInfo_BlockHeight.Size(m)
}
func (m *BlockHeight) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeight.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeight proto.InternalMessageInfo

func (m *BlockHeight) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type ReqDeleteSpOut struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	TxID                 string   `protobuf:"bytes,2,opt,name=txID" json:"txID,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeleteSpOut) Reset()         { *m = ReqDeleteSpOut{} }
func (m *ReqDeleteSpOut) String() string { return proto.CompactTextString(m) }
func (*ReqDeleteSpOut) ProtoMessage()    {}
func (*ReqDeleteSpOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{4}
}
func (m *ReqDeleteSpOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeleteSpOut.Unmarshal(m, b)
}
func (m *ReqDeleteSpOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeleteSpOut.Marshal(b, m, deterministic)
}
func (dst *ReqDeleteSpOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeleteSpOut.Merge(dst, src)
}
func (m *ReqDeleteSpOut) XXX_Size() int {
	return xxx_messageInfo_ReqDeleteSpOut.Size(m)
}
func (m *ReqDeleteSpOut) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeleteSpOut.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeleteSpOut proto.InternalMessageInfo

func (m *ReqDeleteSpOut) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ReqDeleteSpOut) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *ReqDeleteSpOut) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MempoolToDelete struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MempoolToDelete) Reset()         { *m = MempoolToDelete{} }
func (m *MempoolToDelete) String() string { return proto.CompactTextString(m) }
func (*MempoolToDelete) ProtoMessage()    {}
func (*MempoolToDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{5}
}
func (m *MempoolToDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolToDelete.Unmarshal(m, b)
}
func (m *MempoolToDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolToDelete.Marshal(b, m, deterministic)
}
func (dst *MempoolToDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolToDelete.Merge(dst, src)
}
func (m *MempoolToDelete) XXX_Size() int {
	return xxx_messageInfo_MempoolToDelete.Size(m)
}
func (m *MempoolToDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolToDelete.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolToDelete proto.InternalMessageInfo

func (m *MempoolToDelete) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type WatchAddress struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	WalletIndex          int32    `protobuf:"varint,3,opt,name=WalletIndex" json:"WalletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,4,opt,name=AddressIndex" json:"AddressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchAddress) Reset()         { *m = WatchAddress{} }
func (m *WatchAddress) String() string { return proto.CompactTextString(m) }
func (*WatchAddress) ProtoMessage()    {}
func (*WatchAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{6}
}
func (m *WatchAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchAddress.Unmarshal(m, b)
}
func (m *WatchAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchAddress.Marshal(b, m, deterministic)
}
func (dst *WatchAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchAddress.Merge(dst, src)
}
func (m *WatchAddress) XXX_Size() int {
	return xxx_messageInfo_WatchAddress.Size(m)
}
func (m *WatchAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchAddress.DiscardUnknown(m)
}

var xxx_messageInfo_WatchAddress proto.InternalMessageInfo

func (m *WatchAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *WatchAddress) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *WatchAddress) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *WatchAddress) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type MempoolRecord struct {
	Category             int32    `protobuf:"varint,1,opt,name=category" json:"category,omitempty"`
	HashTX               string   `protobuf:"bytes,2,opt,name=hashTX" json:"hashTX,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MempoolRecord) Reset()         { *m = MempoolRecord{} }
func (m *MempoolRecord) String() string { return proto.CompactTextString(m) }
func (*MempoolRecord) ProtoMessage()    {}
func (*MempoolRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{7}
}
func (m *MempoolRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolRecord.Unmarshal(m, b)
}
func (m *MempoolRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolRecord.Marshal(b, m, deterministic)
}
func (dst *MempoolRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolRecord.Merge(dst, src)
}
func (m *MempoolRecord) XXX_Size() int {
	return xxx_messageInfo_MempoolRecord.Size(m)
}
func (m *MempoolRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolRecord proto.InternalMessageInfo

func (m *MempoolRecord) GetCategory() int32 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *MempoolRecord) GetHashTX() string {
	if m != nil {
		return m.HashTX
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{8}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type RawTx struct {
	Transaction          string   `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTx) Reset()         { *m = RawTx{} }
func (m *RawTx) String() string { return proto.CompactTextString(m) }
func (*RawTx) ProtoMessage()    {}
func (*RawTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{9}
}
func (m *RawTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTx.Unmarshal(m, b)
}
func (m *RawTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTx.Marshal(b, m, deterministic)
}
func (dst *RawTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTx.Merge(dst, src)
}
func (m *RawTx) XXX_Size() int {
	return xxx_messageInfo_RawTx.Size(m)
}
func (m *RawTx) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTx.DiscardUnknown(m)
}

var xxx_messageInfo_RawTx proto.InternalMessageInfo

func (m *RawTx) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

type AddressToResync struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address" json:"Address,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=UserID" json:"UserID,omitempty"`
	WalletIndex          int32    `protobuf:"varint,3,opt,name=WalletIndex" json:"WalletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,4,opt,name=AddressIndex" json:"AddressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressToResync) Reset()         { *m = AddressToResync{} }
func (m *AddressToResync) String() string { return proto.CompactTextString(m) }
func (*AddressToResync) ProtoMessage()    {}
func (*AddressToResync) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{10}
}
func (m *AddressToResync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressToResync.Unmarshal(m, b)
}
func (m *AddressToResync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressToResync.Marshal(b, m, deterministic)
}
func (dst *AddressToResync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressToResync.Merge(dst, src)
}
func (m *AddressToResync) XXX_Size() int {
	return xxx_messageInfo_AddressToResync.Size(m)
}
func (m *AddressToResync) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressToResync.DiscardUnknown(m)
}

var xxx_messageInfo_AddressToResync proto.InternalMessageInfo

func (m *AddressToResync) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressToResync) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddressToResync) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *AddressToResync) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type UsersData struct {
	Map                  map[string]*AddressExtended `protobuf:"bytes,1,rep,name=map" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UsersData) Reset()         { *m = UsersData{} }
func (m *UsersData) String() string { return proto.CompactTextString(m) }
func (*UsersData) ProtoMessage()    {}
func (*UsersData) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{11}
}
func (m *UsersData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersData.Unmarshal(m, b)
}
func (m *UsersData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersData.Marshal(b, m, deterministic)
}
func (dst *UsersData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersData.Merge(dst, src)
}
func (m *UsersData) XXX_Size() int {
	return xxx_messageInfo_UsersData.Size(m)
}
func (m *UsersData) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersData.DiscardUnknown(m)
}

var xxx_messageInfo_UsersData proto.InternalMessageInfo

func (m *UsersData) GetMap() map[string]*AddressExtended {
	if m != nil {
		return m.Map
	}
	return nil
}

type AddressExtended struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID" json:"UserID,omitempty"`
	WalletIndex          int32    `protobuf:"varint,2,opt,name=WalletIndex" json:"WalletIndex,omitempty"`
	AddressIndex         int32    `protobuf:"varint,3,opt,name=AddressIndex" json:"AddressIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressExtended) Reset()         { *m = AddressExtended{} }
func (m *AddressExtended) String() string { return proto.CompactTextString(m) }
func (*AddressExtended) ProtoMessage()    {}
func (*AddressExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{12}
}
func (m *AddressExtended) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressExtended.Unmarshal(m, b)
}
func (m *AddressExtended) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressExtended.Marshal(b, m, deterministic)
}
func (dst *AddressExtended) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressExtended.Merge(dst, src)
}
func (m *AddressExtended) XXX_Size() int {
	return xxx_messageInfo_AddressExtended.Size(m)
}
func (m *AddressExtended) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressExtended.DiscardUnknown(m)
}

var xxx_messageInfo_AddressExtended proto.InternalMessageInfo

func (m *AddressExtended) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddressExtended) GetWalletIndex() int32 {
	if m != nil {
		return m.WalletIndex
	}
	return 0
}

func (m *AddressExtended) GetAddressIndex() int32 {
	if m != nil {
		return m.AddressIndex
	}
	return 0
}

type ReplyInfo struct {
	Message              string   `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyInfo) Reset()         { *m = ReplyInfo{} }
func (m *ReplyInfo) String() string { return proto.CompactTextString(m) }
func (*ReplyInfo) ProtoMessage()    {}
func (*ReplyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{13}
}
func (m *ReplyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyInfo.Unmarshal(m, b)
}
func (m *ReplyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyInfo.Marshal(b, m, deterministic)
}
func (dst *ReplyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyInfo.Merge(dst, src)
}
func (m *ReplyInfo) XXX_Size() int {
	return xxx_messageInfo_ReplyInfo.Size(m)
}
func (m *ReplyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyInfo proto.InternalMessageInfo

func (m *ReplyInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ServiceVersion struct {
	Branch               string   `protobuf:"bytes,1,opt,name=branch" json:"branch,omitempty"`
	Commit               string   `protobuf:"bytes,2,opt,name=commit" json:"commit,omitempty"`
	Buildtime            string   `protobuf:"bytes,3,opt,name=buildtime" json:"buildtime,omitempty"`
	Lasttag              string   `protobuf:"bytes,4,opt,name=lasttag" json:"lasttag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceVersion) Reset()         { *m = ServiceVersion{} }
func (m *ServiceVersion) String() string { return proto.CompactTextString(m) }
func (*ServiceVersion) ProtoMessage()    {}
func (*ServiceVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_streamer_335f25b48513c137, []int{14}
}
func (m *ServiceVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceVersion.Unmarshal(m, b)
}
func (m *ServiceVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceVersion.Marshal(b, m, deterministic)
}
func (dst *ServiceVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceVersion.Merge(dst, src)
}
func (m *ServiceVersion) XXX_Size() int {
	return xxx_messageInfo_ServiceVersion.Size(m)
}
func (m *ServiceVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceVersion.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceVersion proto.InternalMessageInfo

func (m *ServiceVersion) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *ServiceVersion) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *ServiceVersion) GetBuildtime() string {
	if m != nil {
		return m.Buildtime
	}
	return ""
}

func (m *ServiceVersion) GetLasttag() string {
	if m != nil {
		return m.Lasttag
	}
	return ""
}

func init() {
	proto.RegisterType((*BTCTransaction)(nil), "btc.BTCTransaction")
	proto.RegisterType((*BTCTransaction_AddresAmount)(nil), "btc.BTCTransaction.AddresAmount")
	proto.RegisterType((*BTCTransaction_WalletForTx)(nil), "btc.BTCTransaction.WalletForTx")
	proto.RegisterType((*AddSpOut)(nil), "btc.AddSpOut")
	proto.RegisterType((*Resync)(nil), "btc.Resync")
	proto.RegisterType((*BlockHeight)(nil), "btc.BlockHeight")
	proto.RegisterType((*ReqDeleteSpOut)(nil), "btc.ReqDeleteSpOut")
	proto.RegisterType((*MempoolToDelete)(nil), "btc.MempoolToDelete")
	proto.RegisterType((*WatchAddress)(nil), "btc.WatchAddress")
	proto.RegisterType((*MempoolRecord)(nil), "btc.MempoolRecord")
	proto.RegisterType((*Empty)(nil), "btc.Empty")
	proto.RegisterType((*RawTx)(nil), "btc.RawTx")
	proto.RegisterType((*AddressToResync)(nil), "btc.AddressToResync")
	proto.RegisterType((*UsersData)(nil), "btc.UsersData")
	proto.RegisterMapType((map[string]*AddressExtended)(nil), "btc.UsersData.MapEntry")
	proto.RegisterType((*AddressExtended)(nil), "btc.AddressExtended")
	proto.RegisterType((*ReplyInfo)(nil), "btc.ReplyInfo")
	proto.RegisterType((*ServiceVersion)(nil), "btc.ServiceVersion")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeCommuunications service

type NodeCommuunicationsClient interface {
	ServiceInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServiceVersion, error)
	EventInitialAdd(ctx context.Context, in *UsersData, opts ...grpc.CallOption) (*ReplyInfo, error)
	SyncState(ctx context.Context, in *BlockHeight, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventAddNewAddress(ctx context.Context, in *WatchAddress, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventGetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockHeight, error)
	EventGetAllMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventGetAllMempoolClient, error)
	EventAddMempoolRecord(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventAddMempoolRecordClient, error)
	EventDeleteMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventDeleteMempoolClient, error)
	EventResyncAddress(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventSendRawTx(ctx context.Context, in *RawTx, opts ...grpc.CallOption) (*ReplyInfo, error)
	EventDeleteSpendableOut(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventDeleteSpendableOutClient, error)
	EventNewBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventNewBlockClient, error)
	EventAddSpendableOut(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventAddSpendableOutClient, error)
	NewTx(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_NewTxClient, error)
	ResyncAddress(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_ResyncAddressClient, error)
}

type nodeCommuunicationsClient struct {
	cc *grpc.ClientConn
}

func NewNodeCommuunicationsClient(cc *grpc.ClientConn) NodeCommuunicationsClient {
	return &nodeCommuunicationsClient{cc}
}

func (c *nodeCommuunicationsClient) ServiceInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServiceVersion, error) {
	out := new(ServiceVersion)
	err := grpc.Invoke(ctx, "/btc.NodeCommuunications/ServiceInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommuunicationsClient) EventInitialAdd(ctx context.Context, in *UsersData, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := grpc.Invoke(ctx, "/btc.NodeCommuunications/EventInitialAdd", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommuunicationsClient) SyncState(ctx context.Context, in *BlockHeight, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := grpc.Invoke(ctx, "/btc.NodeCommuunications/SyncState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommuunicationsClient) EventAddNewAddress(ctx context.Context, in *WatchAddress, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := grpc.Invoke(ctx, "/btc.NodeCommuunications/EventAddNewAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommuunicationsClient) EventGetBlockHeight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockHeight, error) {
	out := new(BlockHeight)
	err := grpc.Invoke(ctx, "/btc.NodeCommuunications/EventGetBlockHeight", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommuunicationsClient) EventGetAllMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventGetAllMempoolClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommuunications_serviceDesc.Streams[0], c.cc, "/btc.NodeCommuunications/EventGetAllMempool", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommuunicationsEventGetAllMempoolClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommuunications_EventGetAllMempoolClient interface {
	Recv() (*MempoolRecord, error)
	grpc.ClientStream
}

type nodeCommuunicationsEventGetAllMempoolClient struct {
	grpc.ClientStream
}

func (x *nodeCommuunicationsEventGetAllMempoolClient) Recv() (*MempoolRecord, error) {
	m := new(MempoolRecord)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommuunicationsClient) EventAddMempoolRecord(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventAddMempoolRecordClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommuunications_serviceDesc.Streams[1], c.cc, "/btc.NodeCommuunications/EventAddMempoolRecord", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommuunicationsEventAddMempoolRecordClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommuunications_EventAddMempoolRecordClient interface {
	Recv() (*MempoolRecord, error)
	grpc.ClientStream
}

type nodeCommuunicationsEventAddMempoolRecordClient struct {
	grpc.ClientStream
}

func (x *nodeCommuunicationsEventAddMempoolRecordClient) Recv() (*MempoolRecord, error) {
	m := new(MempoolRecord)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommuunicationsClient) EventDeleteMempool(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventDeleteMempoolClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommuunications_serviceDesc.Streams[2], c.cc, "/btc.NodeCommuunications/EventDeleteMempool", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommuunicationsEventDeleteMempoolClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommuunications_EventDeleteMempoolClient interface {
	Recv() (*MempoolToDelete, error)
	grpc.ClientStream
}

type nodeCommuunicationsEventDeleteMempoolClient struct {
	grpc.ClientStream
}

func (x *nodeCommuunicationsEventDeleteMempoolClient) Recv() (*MempoolToDelete, error) {
	m := new(MempoolToDelete)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommuunicationsClient) EventResyncAddress(ctx context.Context, in *AddressToResync, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := grpc.Invoke(ctx, "/btc.NodeCommuunications/EventResyncAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommuunicationsClient) EventSendRawTx(ctx context.Context, in *RawTx, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := grpc.Invoke(ctx, "/btc.NodeCommuunications/EventSendRawTx", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommuunicationsClient) EventDeleteSpendableOut(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventDeleteSpendableOutClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommuunications_serviceDesc.Streams[3], c.cc, "/btc.NodeCommuunications/EventDeleteSpendableOut", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommuunicationsEventDeleteSpendableOutClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommuunications_EventDeleteSpendableOutClient interface {
	Recv() (*ReqDeleteSpOut, error)
	grpc.ClientStream
}

type nodeCommuunicationsEventDeleteSpendableOutClient struct {
	grpc.ClientStream
}

func (x *nodeCommuunicationsEventDeleteSpendableOutClient) Recv() (*ReqDeleteSpOut, error) {
	m := new(ReqDeleteSpOut)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommuunicationsClient) EventNewBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventNewBlockClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommuunications_serviceDesc.Streams[4], c.cc, "/btc.NodeCommuunications/EventNewBlock", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommuunicationsEventNewBlockClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommuunications_EventNewBlockClient interface {
	Recv() (*BlockHeight, error)
	grpc.ClientStream
}

type nodeCommuunicationsEventNewBlockClient struct {
	grpc.ClientStream
}

func (x *nodeCommuunicationsEventNewBlockClient) Recv() (*BlockHeight, error) {
	m := new(BlockHeight)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommuunicationsClient) EventAddSpendableOut(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_EventAddSpendableOutClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommuunications_serviceDesc.Streams[5], c.cc, "/btc.NodeCommuunications/EventAddSpendableOut", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommuunicationsEventAddSpendableOutClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommuunications_EventAddSpendableOutClient interface {
	Recv() (*AddSpOut, error)
	grpc.ClientStream
}

type nodeCommuunicationsEventAddSpendableOutClient struct {
	grpc.ClientStream
}

func (x *nodeCommuunicationsEventAddSpendableOutClient) Recv() (*AddSpOut, error) {
	m := new(AddSpOut)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommuunicationsClient) NewTx(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_NewTxClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommuunications_serviceDesc.Streams[6], c.cc, "/btc.NodeCommuunications/NewTx", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommuunicationsNewTxClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommuunications_NewTxClient interface {
	Recv() (*BTCTransaction, error)
	grpc.ClientStream
}

type nodeCommuunicationsNewTxClient struct {
	grpc.ClientStream
}

func (x *nodeCommuunicationsNewTxClient) Recv() (*BTCTransaction, error) {
	m := new(BTCTransaction)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommuunicationsClient) ResyncAddress(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommuunications_ResyncAddressClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommuunications_serviceDesc.Streams[7], c.cc, "/btc.NodeCommuunications/ResyncAddress", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommuunicationsResyncAddressClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommuunications_ResyncAddressClient interface {
	Recv() (*Resync, error)
	grpc.ClientStream
}

type nodeCommuunicationsResyncAddressClient struct {
	grpc.ClientStream
}

func (x *nodeCommuunicationsResyncAddressClient) Recv() (*Resync, error) {
	m := new(Resync)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for NodeCommuunications service

type NodeCommuunicationsServer interface {
	ServiceInfo(context.Context, *Empty) (*ServiceVersion, error)
	EventInitialAdd(context.Context, *UsersData) (*ReplyInfo, error)
	SyncState(context.Context, *BlockHeight) (*ReplyInfo, error)
	EventAddNewAddress(context.Context, *WatchAddress) (*ReplyInfo, error)
	EventGetBlockHeight(context.Context, *Empty) (*BlockHeight, error)
	EventGetAllMempool(*Empty, NodeCommuunications_EventGetAllMempoolServer) error
	EventAddMempoolRecord(*Empty, NodeCommuunications_EventAddMempoolRecordServer) error
	EventDeleteMempool(*Empty, NodeCommuunications_EventDeleteMempoolServer) error
	EventResyncAddress(context.Context, *AddressToResync) (*ReplyInfo, error)
	EventSendRawTx(context.Context, *RawTx) (*ReplyInfo, error)
	EventDeleteSpendableOut(*Empty, NodeCommuunications_EventDeleteSpendableOutServer) error
	EventNewBlock(*Empty, NodeCommuunications_EventNewBlockServer) error
	EventAddSpendableOut(*Empty, NodeCommuunications_EventAddSpendableOutServer) error
	NewTx(*Empty, NodeCommuunications_NewTxServer) error
	ResyncAddress(*Empty, NodeCommuunications_ResyncAddressServer) error
}

func RegisterNodeCommuunicationsServer(s *grpc.Server, srv NodeCommuunicationsServer) {
	s.RegisterService(&_NodeCommuunications_serviceDesc, srv)
}

func _NodeCommuunications_ServiceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommuunicationsServer).ServiceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btc.NodeCommuunications/ServiceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommuunicationsServer).ServiceInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommuunications_EventInitialAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsersData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommuunicationsServer).EventInitialAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btc.NodeCommuunications/EventInitialAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommuunicationsServer).EventInitialAdd(ctx, req.(*UsersData))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommuunications_SyncState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHeight)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommuunicationsServer).SyncState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btc.NodeCommuunications/SyncState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommuunicationsServer).SyncState(ctx, req.(*BlockHeight))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommuunications_EventAddNewAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommuunicationsServer).EventAddNewAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btc.NodeCommuunications/EventAddNewAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommuunicationsServer).EventAddNewAddress(ctx, req.(*WatchAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommuunications_EventGetBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommuunicationsServer).EventGetBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btc.NodeCommuunications/EventGetBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommuunicationsServer).EventGetBlockHeight(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommuunications_EventGetAllMempool_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommuunicationsServer).EventGetAllMempool(m, &nodeCommuunicationsEventGetAllMempoolServer{stream})
}

type NodeCommuunications_EventGetAllMempoolServer interface {
	Send(*MempoolRecord) error
	grpc.ServerStream
}

type nodeCommuunicationsEventGetAllMempoolServer struct {
	grpc.ServerStream
}

func (x *nodeCommuunicationsEventGetAllMempoolServer) Send(m *MempoolRecord) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommuunications_EventAddMempoolRecord_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommuunicationsServer).EventAddMempoolRecord(m, &nodeCommuunicationsEventAddMempoolRecordServer{stream})
}

type NodeCommuunications_EventAddMempoolRecordServer interface {
	Send(*MempoolRecord) error
	grpc.ServerStream
}

type nodeCommuunicationsEventAddMempoolRecordServer struct {
	grpc.ServerStream
}

func (x *nodeCommuunicationsEventAddMempoolRecordServer) Send(m *MempoolRecord) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommuunications_EventDeleteMempool_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommuunicationsServer).EventDeleteMempool(m, &nodeCommuunicationsEventDeleteMempoolServer{stream})
}

type NodeCommuunications_EventDeleteMempoolServer interface {
	Send(*MempoolToDelete) error
	grpc.ServerStream
}

type nodeCommuunicationsEventDeleteMempoolServer struct {
	grpc.ServerStream
}

func (x *nodeCommuunicationsEventDeleteMempoolServer) Send(m *MempoolToDelete) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommuunications_EventResyncAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressToResync)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommuunicationsServer).EventResyncAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btc.NodeCommuunications/EventResyncAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommuunicationsServer).EventResyncAddress(ctx, req.(*AddressToResync))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommuunications_EventSendRawTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawTx)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommuunicationsServer).EventSendRawTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btc.NodeCommuunications/EventSendRawTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommuunicationsServer).EventSendRawTx(ctx, req.(*RawTx))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommuunications_EventDeleteSpendableOut_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommuunicationsServer).EventDeleteSpendableOut(m, &nodeCommuunicationsEventDeleteSpendableOutServer{stream})
}

type NodeCommuunications_EventDeleteSpendableOutServer interface {
	Send(*ReqDeleteSpOut) error
	grpc.ServerStream
}

type nodeCommuunicationsEventDeleteSpendableOutServer struct {
	grpc.ServerStream
}

func (x *nodeCommuunicationsEventDeleteSpendableOutServer) Send(m *ReqDeleteSpOut) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommuunications_EventNewBlock_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommuunicationsServer).EventNewBlock(m, &nodeCommuunicationsEventNewBlockServer{stream})
}

type NodeCommuunications_EventNewBlockServer interface {
	Send(*BlockHeight) error
	grpc.ServerStream
}

type nodeCommuunicationsEventNewBlockServer struct {
	grpc.ServerStream
}

func (x *nodeCommuunicationsEventNewBlockServer) Send(m *BlockHeight) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommuunications_EventAddSpendableOut_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommuunicationsServer).EventAddSpendableOut(m, &nodeCommuunicationsEventAddSpendableOutServer{stream})
}

type NodeCommuunications_EventAddSpendableOutServer interface {
	Send(*AddSpOut) error
	grpc.ServerStream
}

type nodeCommuunicationsEventAddSpendableOutServer struct {
	grpc.ServerStream
}

func (x *nodeCommuunicationsEventAddSpendableOutServer) Send(m *AddSpOut) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommuunications_NewTx_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommuunicationsServer).NewTx(m, &nodeCommuunicationsNewTxServer{stream})
}

type NodeCommuunications_NewTxServer interface {
	Send(*BTCTransaction) error
	grpc.ServerStream
}

type nodeCommuunicationsNewTxServer struct {
	grpc.ServerStream
}

func (x *nodeCommuunicationsNewTxServer) Send(m *BTCTransaction) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommuunications_ResyncAddress_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommuunicationsServer).ResyncAddress(m, &nodeCommuunicationsResyncAddressServer{stream})
}

type NodeCommuunications_ResyncAddressServer interface {
	Send(*Resync) error
	grpc.ServerStream
}

type nodeCommuunicationsResyncAddressServer struct {
	grpc.ServerStream
}

func (x *nodeCommuunicationsResyncAddressServer) Send(m *Resync) error {
	return x.ServerStream.SendMsg(m)
}

var _NodeCommuunications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "btc.NodeCommuunications",
	HandlerType: (*NodeCommuunicationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServiceInfo",
			Handler:    _NodeCommuunications_ServiceInfo_Handler,
		},
		{
			MethodName: "EventInitialAdd",
			Handler:    _NodeCommuunications_EventInitialAdd_Handler,
		},
		{
			MethodName: "SyncState",
			Handler:    _NodeCommuunications_SyncState_Handler,
		},
		{
			MethodName: "EventAddNewAddress",
			Handler:    _NodeCommuunications_EventAddNewAddress_Handler,
		},
		{
			MethodName: "EventGetBlockHeight",
			Handler:    _NodeCommuunications_EventGetBlockHeight_Handler,
		},
		{
			MethodName: "EventResyncAddress",
			Handler:    _NodeCommuunications_EventResyncAddress_Handler,
		},
		{
			MethodName: "EventSendRawTx",
			Handler:    _NodeCommuunications_EventSendRawTx_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EventGetAllMempool",
			Handler:       _NodeCommuunications_EventGetAllMempool_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventAddMempoolRecord",
			Handler:       _NodeCommuunications_EventAddMempoolRecord_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventDeleteMempool",
			Handler:       _NodeCommuunications_EventDeleteMempool_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventDeleteSpendableOut",
			Handler:       _NodeCommuunications_EventDeleteSpendableOut_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventNewBlock",
			Handler:       _NodeCommuunications_EventNewBlock_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventAddSpendableOut",
			Handler:       _NodeCommuunications_EventAddSpendableOut_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NewTx",
			Handler:       _NodeCommuunications_NewTx_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ResyncAddress",
			Handler:       _NodeCommuunications_ResyncAddress_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "streamer.proto",
}

func init() { proto.RegisterFile("streamer.proto", fileDescriptor_streamer_335f25b48513c137) }

var fileDescriptor_streamer_335f25b48513c137 = []byte{
	// 1159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x6f, 0x1b, 0x45,
	0x10, 0xcf, 0xf9, 0xe2, 0xaf, 0x71, 0xec, 0xa4, 0x9b, 0xd0, 0x9e, 0x2c, 0x04, 0xd6, 0x89, 0x48,
	0x2e, 0x42, 0x26, 0xa4, 0x8a, 0x54, 0x4a, 0x55, 0xe1, 0x26, 0x69, 0x6b, 0x89, 0xa6, 0xd2, 0xd9,
	0x2d, 0xbc, 0xae, 0xef, 0xb6, 0xf1, 0xa9, 0xf7, 0x61, 0xee, 0xd6, 0xc9, 0xf9, 0x1d, 0x21, 0xf1,
	0x80, 0xc4, 0x5f, 0xc5, 0x1b, 0xff, 0x13, 0xda, 0xd9, 0x3d, 0x7b, 0x97, 0x98, 0x26, 0x48, 0xbc,
	0xdd, 0xcc, 0xce, 0xd7, 0xfe, 0xe6, 0x37, 0xb3, 0x36, 0x74, 0x72, 0x9e, 0x31, 0x1a, 0xb3, 0x6c,
	0x30, 0xcf, 0x52, 0x9e, 0x12, 0x7b, 0xca, 0x7d, 0xf7, 0xaf, 0x1a, 0x74, 0x9e, 0x4f, 0x4e, 0x27,
	0x19, 0x4d, 0x72, 0xea, 0xf3, 0x30, 0x4d, 0xc8, 0x7d, 0xa8, 0x2d, 0x72, 0x96, 0x8d, 0xce, 0x1c,
	0xab, 0x67, 0xf5, 0x9b, 0x9e, 0x92, 0x08, 0x81, 0x6d, 0x5e, 0x8c, 0xce, 0x9c, 0x0a, 0x6a, 0xf1,
	0x5b, 0xd8, 0xf2, 0xe2, 0x15, 0xcd, 0x67, 0x8e, 0x2d, 0x6d, 0xa5, 0x44, 0x7a, 0xd0, 0xe2, 0xc5,
	0x9b, 0x05, 0x1f, 0xfb, 0x59, 0x38, 0xe7, 0xce, 0x36, 0x1e, 0xea, 0x2a, 0xf2, 0x29, 0x34, 0x79,
	0x31, 0x0c, 0x82, 0x8c, 0xe5, 0xb9, 0x53, 0xed, 0xd9, 0xfd, 0xa6, 0xb7, 0x56, 0x90, 0x2e, 0x34,
	0x78, 0x31, 0xe6, 0x94, 0x2f, 0x72, 0xa7, 0xd6, 0xb3, 0xfa, 0x55, 0x6f, 0x25, 0xaf, 0x62, 0x0f,
	0xe3, 0x74, 0x91, 0x70, 0xa7, 0xde, 0xb3, 0xfa, 0xb6, 0xa7, 0xab, 0x44, 0xec, 0x69, 0x94, 0xfa,
	0x1f, 0x26, 0x61, 0xcc, 0x9c, 0x06, 0x9e, 0xaf, 0x15, 0xc2, 0x1f, 0x85, 0x57, 0x2c, 0xbc, 0x9c,
	0x71, 0xa7, 0x29, 0xfd, 0x35, 0x15, 0xf9, 0x02, 0xda, 0x7e, 0x9a, 0xbc, 0x0f, 0xb3, 0x98, 0x0a,
	0x44, 0x72, 0x07, 0xb0, 0x04, 0x53, 0x49, 0x0e, 0xa0, 0xca, 0x8b, 0x17, 0x8c, 0x39, 0x2d, 0x8c,
	0x20, 0x05, 0x11, 0x3d, 0x66, 0xf1, 0x3c, 0x4d, 0x23, 0xcc, 0xbe, 0x23, 0xa3, 0x6b, 0x2a, 0xf2,
	0x54, 0xdc, 0x6d, 0x94, 0xcc, 0x17, 0x3c, 0x77, 0xda, 0x3d, 0xbb, 0xdf, 0x3a, 0xee, 0x0d, 0xa6,
	0xdc, 0x1f, 0x98, 0x6d, 0x18, 0x48, 0x28, 0xe4, 0x8d, 0xbc, 0x95, 0x07, 0x79, 0x06, 0xcd, 0x89,
	0xb8, 0x2a, 0xba, 0x77, 0xee, 0xe8, 0xbe, 0x76, 0x21, 0xa7, 0xb0, 0xf3, 0x23, 0x8d, 0x22, 0xc6,
	0x73, 0x0c, 0xe8, 0xec, 0x62, 0x88, 0xcf, 0x37, 0x85, 0x90, 0x76, 0x2f, 0xd2, 0x6c, 0x52, 0x78,
	0x86, 0x13, 0x39, 0x87, 0xb6, 0x92, 0x65, 0x58, 0x67, 0xef, 0x6e, 0x51, 0x4c, 0x2f, 0xc1, 0x9e,
	0x8c, 0xe5, 0xcb, 0xc4, 0x77, 0xee, 0xf5, 0xac, 0x7e, 0xc3, 0x53, 0x52, 0xf7, 0x7b, 0xd8, 0xd1,
	0xcb, 0x27, 0x0e, 0xd4, 0xa9, 0x62, 0x8a, 0xa4, 0x64, 0x29, 0x8a, 0x08, 0x54, 0xd2, 0xa0, 0x82,
	0x40, 0x2b, 0xa9, 0x7b, 0x0d, 0x2d, 0x2d, 0x6f, 0x49, 0xe9, 0x30, 0xd0, 0x29, 0x1d, 0x06, 0x7a,
	0xe0, 0x8a, 0x19, 0xf8, 0x33, 0x00, 0x64, 0xd4, 0x28, 0x09, 0x58, 0x81, 0xe4, 0xae, 0x7a, 0x9a,
	0x46, 0x4b, 0xbc, 0xad, 0x27, 0x76, 0xff, 0xa8, 0x40, 0x63, 0x18, 0x04, 0xe3, 0xf9, 0x9b, 0x05,
	0x5f, 0x4d, 0x8c, 0xa5, 0x4d, 0x8c, 0x03, 0x75, 0x19, 0x46, 0x0e, 0x52, 0xd5, 0x2b, 0xc5, 0x7f,
	0xf2, 0xda, 0xbe, 0xc9, 0xeb, 0xdb, 0xa7, 0x4a, 0xbb, 0x50, 0xf5, 0x06, 0x52, 0x6a, 0xaa, 0x6b,
	0xc6, 0x54, 0xeb, 0x93, 0x56, 0xbf, 0x39, 0x69, 0xd7, 0x88, 0xa2, 0x44, 0xa1, 0x81, 0xc7, 0xba,
	0x8a, 0xb8, 0xb0, 0xa3, 0x12, 0x48, 0x93, 0x26, 0x9a, 0x18, 0x3a, 0xf7, 0x77, 0x0b, 0x6a, 0x1e,
	0x36, 0x96, 0x1c, 0x82, 0x3d, 0x29, 0x44, 0x13, 0x05, 0x5b, 0xf6, 0x37, 0xb0, 0xc5, 0x13, 0xe7,
	0xe4, 0x10, 0x6a, 0x08, 0xa0, 0xe8, 0x8a, 0xb0, 0x6c, 0xa3, 0x65, 0x09, 0xab, 0xa7, 0x0e, 0xc9,
	0x09, 0xb4, 0xf0, 0xeb, 0x8c, 0x45, 0x8c, 0x33, 0xc7, 0xd6, 0xa2, 0x7a, 0xec, 0x67, 0xa9, 0x95,
	0x1e, 0xba, 0x9d, 0x7b, 0x08, 0xad, 0xe7, 0xda, 0xb0, 0xdf, 0x87, 0xda, 0x4c, 0x6e, 0x02, 0x4b,
	0x76, 0x52, 0x4a, 0xee, 0x3b, 0xe8, 0x98, 0x51, 0xfe, 0xd3, 0x62, 0xd4, 0x1a, 0x61, 0x1b, 0x8d,
	0x70, 0x0f, 0x61, 0xf7, 0xb5, 0xda, 0x06, 0xa9, 0x8c, 0x2e, 0x02, 0xcc, 0xc4, 0x0e, 0x55, 0x3c,
	0x11, 0xdf, 0xee, 0xaf, 0x96, 0x18, 0x54, 0xee, 0xcf, 0xca, 0x95, 0xf8, 0xd1, 0x21, 0x50, 0x75,
	0x55, 0x8c, 0xba, 0x7a, 0xe5, 0x10, 0xe8, 0x24, 0xd6, 0x55, 0xa2, 0x7d, 0x43, 0xbd, 0x7d, 0xdb,
	0xb2, 0x7d, 0xba, 0xce, 0x3d, 0x85, 0xb6, 0xaa, 0xd7, 0x63, 0x7e, 0x9a, 0x05, 0x82, 0x31, 0x3e,
	0xe5, 0xec, 0x32, 0xcd, 0x96, 0x58, 0x49, 0xd5, 0x5b, 0xc9, 0x08, 0x26, 0xcd, 0x67, 0x93, 0x9f,
	0xca, 0x52, 0xa4, 0xe4, 0xd6, 0xa1, 0x7a, 0x1e, 0xcf, 0xf9, 0xd2, 0x7d, 0x08, 0x55, 0x8f, 0x5e,
	0x4f, 0x0a, 0xe4, 0xf2, 0xba, 0xef, 0xea, 0x4a, 0xba, 0xca, 0xfd, 0xcd, 0x82, 0x5d, 0x55, 0xc9,
	0x24, 0x55, 0x04, 0x72, 0xa0, 0x3e, 0x34, 0x41, 0x18, 0xae, 0x41, 0x78, 0x6b, 0x80, 0xf0, 0xf6,
	0xff, 0x04, 0xe1, 0x17, 0x0b, 0x9a, 0x22, 0x60, 0x7e, 0x46, 0x39, 0x25, 0x0f, 0xc1, 0x8e, 0xe9,
	0x5c, 0xd1, 0xf8, 0x01, 0x12, 0x6e, 0x75, 0x38, 0x78, 0x4d, 0xe7, 0xe7, 0x09, 0xcf, 0x96, 0x9e,
	0xb0, 0xe9, 0xfe, 0x00, 0x8d, 0x52, 0x41, 0xf6, 0xc0, 0xfe, 0xc0, 0x96, 0xaa, 0x70, 0xf1, 0x49,
	0xbe, 0x84, 0xea, 0x15, 0x8d, 0x16, 0x0c, 0x6b, 0x6e, 0x1d, 0x1f, 0x94, 0x3c, 0x17, 0x89, 0xcf,
	0x0b, 0xce, 0x92, 0x80, 0x05, 0x9e, 0x34, 0x79, 0x52, 0x79, 0x6c, 0xb9, 0xe9, 0x0a, 0x91, 0xf2,
	0x54, 0xbb, 0xb7, 0xf5, 0xb1, 0x7b, 0x57, 0x6e, 0xbf, 0xb7, 0xbd, 0xe1, 0xde, 0x87, 0xd0, 0xf4,
	0xd8, 0x3c, 0x5a, 0x8e, 0x92, 0xf7, 0xa9, 0x00, 0x3f, 0x66, 0x79, 0x4e, 0x2f, 0x59, 0x09, 0xbe,
	0x12, 0xdd, 0x02, 0x3a, 0x63, 0x96, 0x5d, 0x85, 0x3e, 0x7b, 0xc7, 0xb2, 0x5c, 0xfd, 0x88, 0x98,
	0x66, 0x34, 0xf1, 0x4b, 0x52, 0x2b, 0x49, 0xe8, 0xfd, 0x34, 0x8e, 0x43, 0x5e, 0xb6, 0x49, 0x4a,
	0xf8, 0x64, 0x2f, 0xc2, 0x28, 0xe0, 0xe2, 0xd1, 0x94, 0x13, 0xb3, 0x56, 0x88, 0xcc, 0x11, 0xcd,
	0x39, 0xa7, 0x97, 0x6a, 0xe9, 0x95, 0xe2, 0xf1, 0x9f, 0x35, 0xd8, 0xbf, 0x48, 0x03, 0x76, 0x9a,
	0xc6, 0xf1, 0x62, 0x91, 0x84, 0xbe, 0x7a, 0x9c, 0x8f, 0xa0, 0xa5, 0x2a, 0xc2, 0xd2, 0x01, 0x91,
	0x45, 0x0a, 0x76, 0xe5, 0x86, 0x30, 0xeb, 0x75, 0xb7, 0xc8, 0x23, 0xd8, 0x3d, 0xbf, 0x62, 0x09,
	0x1f, 0x25, 0x21, 0x0f, 0x69, 0x34, 0x0c, 0x02, 0xd2, 0x31, 0x5b, 0xdb, 0xed, 0xa8, 0xdd, 0xa2,
	0x00, 0x71, 0xb7, 0xc8, 0xd7, 0xd0, 0x1c, 0x2f, 0x13, 0x5f, 0xec, 0x4b, 0x46, 0xf6, 0xe4, 0x42,
	0x5b, 0xef, 0x96, 0x0d, 0x0e, 0xdf, 0x02, 0xc1, 0x2c, 0xc3, 0x20, 0xb8, 0x60, 0xd7, 0x25, 0x79,
	0xef, 0xa1, 0x9d, 0x3e, 0xee, 0x1b, 0x5c, 0x4f, 0x60, 0x1f, 0x5d, 0x5f, 0x32, 0xae, 0xef, 0x2f,
	0xfd, 0x6a, 0x37, 0x2a, 0x70, 0xb7, 0xc8, 0x63, 0x95, 0xf1, 0x25, 0xe3, 0xc3, 0x28, 0x52, 0xa3,
	0x6c, 0x78, 0x11, 0xfc, 0x36, 0x86, 0xdc, 0xdd, 0x3a, 0xb2, 0xc8, 0x77, 0xf0, 0x49, 0x59, 0xab,
	0xb9, 0x01, 0xee, 0xe2, 0xfc, 0x44, 0xa5, 0x95, 0x2b, 0x6e, 0x53, 0xda, 0x03, 0xdd, 0xb3, 0xdc,
	0x85, 0xe8, 0xfb, 0x54, 0xf9, 0xca, 0xa1, 0x2f, 0x41, 0x32, 0xa6, 0xa3, 0xdc, 0x08, 0x1b, 0x70,
	0x1a, 0x40, 0x07, 0xbd, 0xc7, 0x2c, 0x09, 0xe4, 0xae, 0x91, 0x59, 0xf1, 0x7b, 0x83, 0xfd, 0x33,
	0x78, 0xa0, 0x55, 0x3a, 0x9e, 0xb3, 0x24, 0xa0, 0xd3, 0x88, 0x89, 0x8d, 0x7f, 0x93, 0x36, 0xe6,
	0x93, 0x80, 0xd5, 0x7e, 0x03, 0x6d, 0xf4, 0xbf, 0x60, 0xd7, 0x88, 0xfc, 0x6d, 0x1d, 0x39, 0xb2,
	0xc8, 0x09, 0x1c, 0x94, 0xc8, 0xfe, 0x6b, 0x3e, 0xf3, 0xd1, 0x43, 0xb7, 0xaf, 0xa0, 0x7a, 0xc1,
	0xd6, 0x17, 0xd2, 0xeb, 0x32, 0x9f, 0x51, 0x65, 0xdd, 0x36, 0x01, 0xd4, 0xbd, 0x5a, 0xea, 0x36,
	0xe2, 0x5c, 0x58, 0x4f, 0x6b, 0xf8, 0xa7, 0xe0, 0xd1, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0e,
	0x17, 0x29, 0xeb, 0x26, 0x0c, 0x00, 0x00,
}
